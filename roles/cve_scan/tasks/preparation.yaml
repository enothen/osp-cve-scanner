- name: Gather facts subset
  tags:
    - always
  run_once: True
  ansible.builtin.setup:
    gather_subset:
      - date_time
      - distribution_version

- name: Install openscap and related utilities
  tags:
    - packages
  become: True
  ansible.builtin.dnf:
    name: 
      - openscap-scanner
      - bzip2
    state: present

- name: Set fact with temporary report directory
  tags:
    - directory
  run_once: True
  delegate_to: localhost
  set_fact:
    report_directory: "{{ tmp_directory_root }}/oscap_report_{{ ansible_facts.date_time.iso8601_basic_short }}"

- name: Create temporary report directory
  tags:
    - directory
  ansible.builtin.file:
    state: directory
    path: "{{ report_directory }}"

- name: Create hosts directory structure
  tags:
    - directory
  delegate_to: localhost
  ansible.builtin.file:
    state: directory
    path: "{{ report_directory }}/{{ inventory_hostname }}"

- name: "Download definitions file ({{ osp_oval_files_map[ansible_facts.distribution_version] }}.bz2)"
  tags:
    - preparation
  run_once: True
  delegate_to: localhost
  ansible.builtin.get_url:
    url: "{{ oval_definitions_url }}/RHEL{{ ansible_facts.distribution_major_version }}/{{ osp_oval_files_map[ansible_facts.distribution_version] }}.bz2"
    dest: "{{ report_directory }}/"
    mode: '0444'

- name: Extract oval file
  tags:
    - preparation
  run_once: True
  delegate_to: localhost
  ansible.builtin.command:
    bunzip2 "{{ report_directory }}/{{ osp_oval_files_map[ansible_facts.distribution_version] }}.bz2"

- name: Copy oval file to target servers
  tags:
    - preparation
  ansible.builtin.copy:
    src: "{{ report_directory }}/{{ osp_oval_files_map[ansible_facts.distribution_version] }}"
    dest: "{{ report_directory }}/"
