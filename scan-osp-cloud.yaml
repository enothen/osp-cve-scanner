---
- name: This playbook runs OpenSCAP verification in RHOSP nodes, then consolidates html reports in a single location
  hosts: all
  gather_facts: False
  become: False

  vars:
    oval_definitions_url: https://www.redhat.com/security/data/oval/v2
    osp_oval_files_map:
      '9.2': rhel-9.2-eus.oval.xml
      '8.4': rhel-8.4-tus.oval.xml
      '8.2': rhel-8.2-tus.oval.xml
    tmp_directory_root: /tmp
    target_webserver: satellite.keller.lab:/var/www/html/pub/reports

  tasks:
    - name: Gather facts subset
      tags:
        - always
      run_once: True
      ansible.builtin.setup:
        gather_subset:
          - date_time
          - distribution_version

    - name: Install openscap and related utilities
      tags:
        - preparation
        - packages
      become: True
      ansible.builtin.dnf:
        name: 
          - openscap-scanner
          - bzip2
        state: present

    - name: Create temporary report directory
      tags:
        - preparation
      run_once: True
      delegate_to: localhost
      ansible.builtin.file:
        state: directory
        path: "{{ tmp_directory_root }}/oscap_report_{{ ansible_facts.date_time.iso8601_basic_short }}"
      register: report_directory

    - name: "Download definitions file ({{ osp_oval_files_map[ansible_facts.distribution_version] }}.bz2)"
      tags:
        - preparation
      run_once: True
      delegate_to: localhost
      ansible.builtin.get_url:
        url: "{{ oval_definitions_url }}/RHEL{{ ansible_facts.distribution_major_version }}/{{ osp_oval_files_map[ansible_facts.distribution_version] }}.bz2"
        dest: "{{ report_directory.path }}/"
        mode: '0444'

    - name: Extract oval file
      tags:
        - preparation
      run_once: True
      delegate_to: localhost
      ansible.builtin.command:
        bunzip2 "{{ report_directory.path }}/{{ osp_oval_files_map[ansible_facts.distribution_version] }}.bz2"

    - name: Copy oval file to target servers
      tags:
        - preparation
      ansible.builtin.copy:
        src: "{{ report_directory.path }}/{{ osp_oval_files_map[ansible_facts.distribution_version] }}"
        dest: "{{ tmp_directory_root }}/"

    - name: Perform OpenSCAP scan
      tags:
        - scan_hosts
      become: True
      ansible.builtin.shell: 
        oscap oval eval --report {{ tmp_directory_root }}/{{ inventory_hostname }}.html {{ tmp_directory_root }}/{{ osp_oval_files_map[ansible_facts.distribution_version] }}

    - name: Copy reports to ansible host
      ansible.builtin.fetch:
        src: "{{ tmp_directory_root }}/{{ inventory_hostname }}.html"
        dest: "{{ report_directory.path }}/"
        flat: True

    - name: Create report archive
      run_once: True
      delegate_to: localhost
      ansible.builtin.shell:
        tar -czf {{ report_directory.path}}.tgz {{ report_directory.path }}

    - name: Copy files to target webserver
      tags:
        - rsync
      run_once: True
      delegate_to: localhost
      ansible.builtin.shell:
        rsync -e "ssh -o StrictHostKeyChecking=no" -r {{ report_directory.path }}.tgz {{ target_webserver }}

    - name: Cleanup hosts
      tags:
        - cleanup
        - always
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ tmp_directory_root }}/{{ osp_oval_files_map[ansible_facts.distribution_version] }}"
        - "{{ tmp_directory_root }}/{{ inventory_hostname }}.html"

    - name: Cleanup ansible host
      tags:
        - cleanup
        - always
      run_once: True
      delegate_to: localhost
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ report_directory.path }}.tgz"
        - "{{ report_directory.path }}"

